#!/bin/sh

### BEGIN INIT INFO
# Provides:        redis-what-the-role.rb
# Required-Start:  $network $remote_fs $syslog
# Required-Stop:   $network $remote_fs $syslog
# Default-Start:   2 3 4 5
# Default-Stop: 
# Short-Description: Start redis-what-the-role daemon
### END INIT INFO

PATH=/sbin:/bin:/usr/sbin:/usr/bin:/opt/redis-what-the-role/

. /lib/lsb/init-functions

DAEMON=/opt/redis-what-the-role/redis-what-the-role.rb
PIDFILE=/var/run/redis-what-the-role.pid

test -x $DAEMON || exit 5

RUNASUSER=brandwatch
UGID=$(getent passwd $RUNASUSER | cut -f 3,4 -d:) || true

case $1 in
	start)
		log_daemon_msg "Starting redis-what-the-role server" "redis-what-the-role"

		if [ -z "$UGID" ]; then
			log_failure_msg "user \"$RUNASUSER\" does not exist"
			exit 1
		fi

  		start-stop-daemon --start --background --oknodo --chuid $UGID --pidfile $PIDFILE --startas $DAEMON

		status=$?

        PID=$(ps axu | grep -v grep | grep "ruby $DAEMON" | awk '{ print $2 }')

        if [ $? != 0 ]; then
            log_failure_msg "can't establish PID of process: $DAEMON"
            exit 1
        fi

        if [ ! -z "$PID" ]; then
            echo $PID > $PIDFILE
        fi
        
		log_end_msg $status
  		;;
	stop)
		log_daemon_msg "Stopping redis-what-the-role server" "redis-what-the-role"

        if [ ! -f $PIDFILE ]; then
            log_failure_msg "can't find PID file: $PIDFILE"
            exit 1
        fi

        PID=$(cat $PIDFILE)

        kill -2 $PID && sleep 2 && kill -0 $PID && kill -9 $PID

		log_end_msg $?
		rm -f $PIDFILE
  		;;
	restart|force-reload)
		$0 stop && sleep 2 && $0 start
  		;;
	try-restart)
		if $0 status >/dev/null; then
			$0 restart
		else
			exit 0
		fi
		;;
	reload)
		exit 3
		;;
	status)
		status_of_proc $DAEMON "redis-what-the-role server"
		;;
	*)
		echo "Usage: $0 {start|stop|restart|try-restart|force-reload|status}"
		exit 2
		;;
esac
